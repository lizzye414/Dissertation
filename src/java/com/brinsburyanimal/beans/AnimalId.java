package com.brinsburyanimal.beans;
// Generated 22-Jul-2019 17:44:49 by Hibernate Tools 4.3.1

import com.brinsburyanimal.dao.AnimalDao;
import com.brinsburyanimal.dao.SpeciesDao;
import java.util.ArrayList;
import java.util.List;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.convert.ConverterException;
import javax.faces.convert.FacesConverter;




/**
 * AnimalId generated by hbm2java
 */
@ManagedBean
@SessionScoped
public class AnimalId  implements java.io.Serializable {


     private String latinName;
     private String animalName;

    public AnimalId() {
    }

    public AnimalId(String latinName, String animalName) {
       this.latinName = latinName;
       this.animalName = animalName;
    }
   
    public String getLatinName() {
        return this.latinName;
    }
    
    public void setLatinName(String latinName) {
        this.latinName = latinName;
    }
    public String getAnimalName() {
        return this.animalName;
    }
    
    public void setAnimalName(String animalName) {
        this.animalName = animalName;
    }

    @Override
    public String toString() {
        return "AnimalId{" + "latinName=" + latinName + ", animalName=" + animalName + '}';
    }

    
    

   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AnimalId) ) return false;
		 AnimalId castOther = ( AnimalId ) other; 
         
		 return ( (this.getLatinName()==castOther.getLatinName()) || ( this.getLatinName()!=null && castOther.getLatinName()!=null && this.getLatinName().equals(castOther.getLatinName()) ) )
 && ( (this.getAnimalName()==castOther.getAnimalName()) || ( this.getAnimalName()!=null && castOther.getAnimalName()!=null && this.getAnimalName().equals(castOther.getAnimalName()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getLatinName() == null ? 0 : this.getLatinName().hashCode() );
         result = 37 * result + ( getAnimalName() == null ? 0 : this.getAnimalName().hashCode() );
         return result;
   }   
   
   public AnimalId getAnimalId(){
       AnimalId animalId = new AnimalId(this.latinName, this.animalName);
       return animalId;
   }
   
   public Species getSpecies(){
       List<Species> species = new ArrayList<>();
       Species chosenSpecies = new Species();
       SpeciesDao dao = new SpeciesDao();
       species = dao.getAllSpecies();
       for(Species eachSpecies: species){
           if (eachSpecies.getLatinName().equals(this.latinName)){
               chosenSpecies = eachSpecies;
           }
       }
       return chosenSpecies;
   }
   
   public List<AnimalId> getAllAnimalIds(){
       List<Animal> allAnimals = new ArrayList<>();
       AnimalDao dao = new AnimalDao();
       allAnimals = dao.getAllAnimals();
       List<AnimalId> allAnimalIds = new ArrayList<>();
       for (Animal eachAnimal: allAnimals){
           allAnimalIds.add(eachAnimal.getId());
       }
       return allAnimalIds;
   }
   
   public AnimalId findAnimalIdById(String animalId){
        AnimalId newAnimalId = new AnimalId();
        List<AnimalId> animalIds = this.getAllAnimalIds();
        for (AnimalId eachAnimalId: animalIds){
            if(eachAnimalId.getAnimalId().toString().equals(animalId)){
                newAnimalId = eachAnimalId;
            }
        }
        return newAnimalId;        
    }
   
   @FacesConverter("AnimalIdConverter")
    public static class AnimalIdConverter implements Converter {

        private AnimalId newAnimalId = new AnimalId();

        @Override
        public Object getAsObject(FacesContext facesContext, UIComponent component, String value) {
            if (value == null || value.length() == 0) {
                return null;
            }
            try {
                 return newAnimalId.findAnimalIdById(value);
            } catch (NumberFormatException e) {
                throw new ConverterException(new FacesMessage(value + " is not a valid animal ID"), e);
            }
        }

        @Override
        public String getAsString(FacesContext facesContext, UIComponent component, Object object) {
            if (object == null) {
                return "";
            }

            if (object instanceof Animal) {
                return String.valueOf(((Animal) object).getId());
            } else {
                throw new ConverterException(new FacesMessage(object + " is not a valid animal"));
            }
        }
   }

}


